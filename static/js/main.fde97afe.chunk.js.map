{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","isOpen","handleShowClick","e","handleDelete","delete","t0","_this2","contactDetail","className","email","phone","iconClass","name","onClick","style","cursor","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","href","branding","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","handleChange","defineProperty","target","handleSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","onSubmit","layout_TextInputGroup","EditContact","udateContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fde97afe.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n  handleShowClick = e => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n  handleDelete = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { contact } = this.props;\r\n    const contactDetail = this.state.isOpen ? (\r\n      <ul className=\"list-group\">\r\n        <li className=\"list-group-item\">Email:{contact.email}</li>\r\n        <li className=\"list-group-item\">Phone:{contact.phone}</li>\r\n      </ul>\r\n    ) : null;\r\n    const iconClass = !this.state.isOpen\r\n      ? 'fas fa-sort-down'\r\n      : 'fas fa-sort-up';\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {contact.name}\r\n                <i\r\n                  onClick={this.handleShowClick}\r\n                  className={iconClass}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={() => this.handleDelete(contact.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {contactDetail}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => {\r\n                return <Contact key={contact.id} contact={contact} />;\r\n              })}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n      </div>\r\n      <ul className=\"navbar-nav mr-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <i className=\"fas fa-home\" /> Home\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/contact/add\" className=\"nav-link\">\r\n            <i className=\"fas fa-plus\" /> Add\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question\" /> About\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //Check for errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' }\r\n      });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={e => this.handleSubmit(dispatch, e)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //Check for errors\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required' }\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required' }\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required' }\r\n      });\r\n      return;\r\n    }\r\n    const udateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      udateContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Update contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={e => this.handleSubmit(dispatch, e)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.handleChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.handleChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-success\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"disolay-4\">\r\n        <span className=\"text-danger\">404</span> Page Not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry that page dows not exists</p>\r\n    </div>\r\n  );\r\n};\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}